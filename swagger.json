{
  "openapi": "3.0.0",
  "info": {
    "title": "Chat API",
    "version": "1.0.0",
    "description": "A simple chat api"
  },
  "servers": [
    {
      "url": "http://localhost:8000"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "Auth"
        ],
        "description": "Creates a new user account by accepting user details.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": true,
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "johndoe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "johndoe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "mySecurePassword123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/UserDTO"
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing or invalid data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid email, password, name"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Something went wrong"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Login a user",
        "tags": [
          "Auth"
        ],
        "description": "Authenticates a user and returns a token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": true,
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "johndoe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "mySecurePassword123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/UserDTO"
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing or invalid data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Email and password are required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid email or password"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Something went wrong"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/chat": {
      "post": {
        "summary": "Create a new chat",
        "description": "Creates a new chat with a specified name, creator, and list of users.",
        "tags": [
          "Chat"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Team Project"
                  },
                  "creator": {
                    "type": "number",
                    "example": 1
                  },
                  "users": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "minItems": 2,
                    "maxItems": 10,
                    "example": [
                      2,
                      3,
                      4
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Chat successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chat": {
                      "$ref": "#/components/schemas/Chat"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Validation error: users must contain between 2 and 10 members."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Chat already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Chat already exists with the specified users."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/chat/{chatId}": {
      "get": {
        "summary": "Retrieve a specific chat by ID",
        "description": "Fetches the chat data for the given chat ID.",
        "tags": [
          "Chat"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "chatId",
            "required": true,
            "description": "The ID of the chat to retrieve.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chat successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chat": {
                      "$ref": "#/components/schemas/Chat"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Chat not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update a specific chat by ID",
        "description": "Updates the chat data for the given chat ID with the provided name.",
        "tags": [
          "Chat"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "chatId",
            "required": true,
            "description": "The ID of the chat to update.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The new name for the chat.",
                    "example": "New Chat Name"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chat successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chat": {
                      "$ref": "#/components/schemas/Chat"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Chat not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a specific chat by ID",
        "description": "Deletes the chat with the specified chat ID.",
        "tags": [
          "Chat"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "chatId",
            "required": true,
            "description": "The ID of the chat to delete.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Chat successfully deleted (no content)."
          },
          "404": {
            "description": "Chat not found."
          },
          "500": {
            "description": "Server error."
          }
        }
      }
    },
    "/api/chat/{chatId}/message": {
      "post": {
        "summary": "Create a new message with optional image uploads",
        "description": "Creates a new message in a specific chat and optionally uploads up to two images.",
        "tags": [
          "Message"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "chatId",
            "required": true,
            "description": "The ID of the chat where the message will be created.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "Up to 2 images to upload."
                  },
                  "content": {
                    "type": "string",
                    "description": "The content of the message.",
                    "example": "Hello, this is a message!"
                  },
                  "sender": {
                    "type": "number",
                    "description": "The ID of the sender.",
                    "example": 4
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Message successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "$ref": "#/components/schemas/Message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or file upload error."
          },
          "500": {
            "description": "Server error."
          }
        }
      },
      "get": {
        "summary": "Get a paginated list of messages for a specific chat",
        "description": "Retrieve messages for a chat, paginated 50 by 50, sorted from the most recent to the oldest.",
        "tags": [
          "Message"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "chatId",
            "required": true,
            "description": "The ID of the chat whose messages are to be retrieved.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "description": "The page number for pagination (default is 1).",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of messages for the chat.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalCount": {
                      "type": "integer",
                      "description": "The total number of messages available.",
                      "example": 10
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Message"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Chat not found or no messages available."
          },
          "500": {
            "description": "Server error."
          }
        }
      }
    },
    "/api/chat/{chatId}/message/{messageId}": {
      "delete": {
        "summary": "Delete a specific message by ID",
        "description": "Deletes a message with the specified message ID.",
        "tags": [
          "Message"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "messageId",
            "required": true,
            "description": "The ID of the message to delete.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Message successfully deleted (no content)."
          },
          "404": {
            "description": "Message not found."
          },
          "500": {
            "description": "Server error."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Chat": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Famille"
          },
          "creator_id": {
            "type": "integer",
            "example": 3
          },
          "users": {
            "type": "array",
            "items": {
              "type": null,
              "$ref": "#/components/schemas/PublicUserDTO"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2025-01-15T08:45:23Z"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2025-01-15T08:45:23Z"
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 2
          },
          "sender_id": {
            "type": "integer",
            "example": 1
          },
          "chat_id": {
            "type": "integer",
            "example": 4
          },
          "content": {
            "type": "string",
            "example": "blabla"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2025-01-15T08:45:23Z"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2025-01-15T08:45:23Z"
          }
        }
      },
      "PublicUserDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          }
        }
      },
      "UserDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "johndoe@example.com"
          },
          "admin": {
            "type": "boolean",
            "example": false
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2025-01-15T08:45:23Z"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Auth",
      "description ": "Authentification routes"
    },
    {
      "name": "Chat",
      "description": "Chat routes"
    },
    {
      "name": "Message",
      "description": "Message routes"
    }
  ]
}